
object RValues

inherit list
  Harness



Execute task


  @Test '@.', task
    set a to: "2" true
    return a.2

  @Test 'it.3', task
    set a to: "3" true
    with a
      return .3 and it.3 and a.3

  @Test '@[]', task
    set @b to true
    set c to 'b'
    return @[c]

  @Test 'self = 2', task
    set b to 1
    set b to self + 1
    return b = 2

  @Test 'it = 1', task
    ply list 1
      return it = 1

  @Test 'trial = 1', task
    if 1
      return trial = 1

  @Test 'it = 1 (ply)', task
    ply list 1
      return it = 1

  @Test 'it = 1 (each)', task
    each list 1
      return it = 1

  @Test 'catch error', task
    try
      throw new ~Error 4
    catch
      return error.message=4
    return false

  @Test 'key is 0 (ply)', task
    ply list a
      return key is 0

  @Test 'key = a (each)', task
    each traits a b
      return key = 'a'

  @Test 'key = 1 (count up)', task
    count 1, 2
      return counter = 1

  @Test 'key = 1 (count down)', task
    countdown 2 
      return counter = 1

  @Test 'local b=1', task
    local b to 1
    return b = 1

  @Test '@b=1', task
    set @b to 1
    return @b = 1

  @Test '.b=1 (ply)', task
    ply list traits b 1 
      return .b = 1

  @Test '.b=1 (each)', task
    each list traits b 1 
      return .b = 1

  @Test 'local $b=1', task
    local f to task expects $b
      return $b = 1
    return from f: b 1
  
  @Test '?1.c.d exception', task
    set b to 1
    try
      set b to b.c.d
    catch as e
      return true

  @Test '?1.c.d', task
    set b to 1
    if exists ?b.c.d
      return false
    return true

  @Test 'local b.cow = 1', task
    local b to traits cow 1
    return b.cow = 1

  @Test 'local b[a] = 1', task
    local b to traits cow 1
    set a to 'cow'
    return b[a] = 1


