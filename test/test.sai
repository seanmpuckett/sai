#!/usr/bin/env sai-run

reference:
  fs require('fs')
  readline require('readline')
  stream require('stream')
  
object Test main

instance:
  pass empty
  fail empty
  ids blank

Timer task given d, f
  ~setTimeout f, d

Instantiate task

  //@AnalyseParseTrace

  set tests to list
    Pipers
    Scope
    Loops
    Generators
    Promises
    Literals
    Syntax
    Comps
    RValues
    Operators
    Precedence
    Constructs
    Functions
    SetStatement
    Reference
    CompOrderOps
    Inheritance

  set startTime new ~Date

  set pending tests | thru !promise
    promising (create it @).Execute
    then
      debug "Test ${it} complete."
    catch
      debug $
      push'd fail "Could not execute tests in ${it}"
    finalized
      
  promising 
  all pending
  then
    set endTime new ~Date
    debug 'Test time ${endTime-startTime}ms.'
    if @fail.length
      debug 'FAILED'
      ply @fail
        debug 'FAIL: ${it}'
      ~process.exit 1
    else
      debug 'SUCCESS'
  catch
    debug $.message
    debug "I am not sure how the promises failed."
    
  
  
