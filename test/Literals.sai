
object Literals

inherit list
  Harness


Execute task

  @Test 'null', task
    return not (null is undefined) and (null=undefined) and (typeof null = 'object')
    
  @Test 'nan', task
    return isNaN NaN
    
  @Test 'compose', task
    return 'a4b' = 'a${4}b'
    
  @Test 'octal 1 ', task
    return 0o0 is 0
    
  @Test 'octal 2 ', task
    return 0o20 is 16
    
  @Test 'octal 3 ', task
    return 0o17777777777 is 2147483647
   
  @Test 'octal 4 ', task
    return -0o20 is -16
    
  @Test 'hex 1 ', task
    return 0x0 is 0
    
  @Test 'hex 2 ', task
    return 0xF0 is 240
    
  @Test 'hex 3 ', task
    return 0x7FfFffff is 2147483647
   
  @Test 'hex 4 ', task
    return -0xA0 is -160
    
  @Test 'binary 1 ', task
    return 0b0 is 0
    
  @Test 'binary 2 ', task
    return 0b11110000 is 240
    
  @Test 'binary 3 ', task
    return 0b1111111111111111111111111111111 is 2147483647
   
  @Test 'binary 4 ', task
    return -0b11110000 is -240
    
  @Test 'compose lead var', task
    return (2+'${2}')='22'

  @Test 'degrad', task
    return ~Math.abs(180o - ~Math.PI)<0.0001
    
  @Test 'exp large', task
    return 1e5 = 100000
    
  @Test 'exp small', task
    return 1e-5 = 0.00001
    
  @Test 'true', task
    return true=1 and true isnt 1 and true isnt false
    
  @Test '$$', task
    set a to task 
      return $$.length
    return 2=a(1,2)
    
  @Test 'string lit as object', task
    return 2='12'.length
    
  @Test 'enum 1', task
    set a to: 
      a enum
      b enum
      c 10
      d enum
    return a.a=1 and a.b=2 and a.c=10 and a.d=11
    
    
  @Test 'newline', task
    set a to '\n'
    return a=~String.fromCharCode(10)

  @Test 'carriage return', task
    set a to '\r'
    return a=~String.fromCharCode(13)

  @Test 'tab', task
    set a to '\t'
    return a=~String.fromCharCode(9)

  @Test 'backspace', task
    set a to '\b'
    return a=~String.fromCharCode(8)

  @Test 'form feed', task
    set a to '\f'
    return a=~String.fromCharCode(12)

  @Test 'unicode', task
    set a to '\u0041'
    return a='A'
    
  @Test 'hex', task
    set a to '\x41'
    return a='A'
    
  @Match 'iterator', 1, task
    iterate @
      return it
    return false

  @Test 'is null an object (narrator: it isnt)', task
    set a null
    set a self | by it asc
    return a is null

Iterator process
  yield 1
  