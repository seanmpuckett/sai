
object TryCatchC

inherit: Construct

// MANIFEST

manifest get 
  return:
    'try':
      repeats false
      clauses:
        'try': #block
        'catch': #outblock
        'finally': #block
      handler bind TryConstruct
      
    'throw':
      repeats false
      clauses:
        'throw': #exprs
      handler bind ThrowConstruct
      

TryConstruct task expects $clauses, $tools

  set pattern $clauses into '' sum + (.type limit 1)
  unless pattern is 'tc' or pattern is 'tf' or pattern is 'tcf'
    return: error "SAI compiler: error in structure of TRY/CATCH/FINALLY: expected tc/tf/tcf, got ${pattern}"
  
  // args.exprs.0 = 'array' / 'fields'
  // args.exprs.1 = insertable text
  // args.exprs.2 = heirarchical structure of elements

  set body ''

  each $clauses
  
    switch .type
    case 'try.block'
      set body + 'try { ${.args.block} }\n'

    case 'catch.outblock'
      set outs from my OutVarHelper .args.out
      set vars:
        'error' outs.0
        'block' .args.block

      set text '''
        catch(^{error}) { ^{block} }
        
      set body + from $tools.replacer text, vars
      
    case 'finally.block'
      set body + 'finally { ${.args.block} }\n'

    else
      return: error "SAI compiler: unhandled ${.type} in TryConstruct -- this is a compiler bug."
      
  return: body body


ThrowConstruct task expects $clauses, $tools
  set body ''
  with $clauses.0
  
    switch .type
    case 'throw.exprs'
      set body 'throw ${.args.exprs.1};\n'
    else
      return: error "SAI compiler: unhandled ${.type} in ThrowConstruct -- this is a compiler bug."
  
  return: body body


